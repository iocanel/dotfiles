# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
font pango: M+ 1m, FontAwesome, Ionicons, 12

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Gaps
smart_gaps on
gaps inner 20
gaps outer 20

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec kitty
bindsym $mod+u exec kitty --class=EditorTerm

bindsym $mod+b exec qutebrowser

#
# Floating Apps
#

#Nitrogen
for_window [class="Nitrogen"] floating enable
for_window [class="Nitrogen"] resize set 50 ppt 50 ppt
for_window [class="Nitrogen"] move position center

#K9s
for_window [title="k9s"] floating enable
for_window [title="k9s"] resize set 80 ppt 80 ppt
for_window [title="k9s"] move position center

# AlsaMixer
bindsym $mod+Ctrl+a exec kitty --title alsamixer -e alsamixer
for_window [title="alsamixer"] floating enable;

# Bluetooth manager
bindsym $mod+Ctrl+b exec blueman-manager
for_window [class="Blueman-manager"] floating enable; move position center;

# ytop
bindsym $mod+Ctrl+t exec kitty --title ytop -e ytop
for_window [title="ytop"] floating enable;


# dunst
bindsym Ctrl+grave exec dunstctl history-pop
#bindsym --release Ctrl+n; exec dunstctl close
#bindsym Mod+shift+space; exec dunstctl close-all
#bindsym $mod+shift+d; exec dunstctl set-paused toggle

# dunst


#
# Emacs frames
#

# Move shell like windows to the bottom of the screen to create an
# IDE-like layout (windows on top - tiny shell to the bottom)

#for_window [title="^\*vterm.*"] move down; resize set 100 ppt 25 ppt;
#for_window [title="^\*shell.*"] move down; resize set 100 ppt 25 ppt;
#for_window [title=".*helm-ag.*"] move down; resize set 100 ppt 25 ppt;
#for_window [title=".*undo-tree.*"] move right; resize set 50 ppt 100 ppt;

for_window [class="EditorTerm"] move down; 
for_window [class="EditorTerm"] resize set height 25 ppt;

# org-agenda
bindsym $mod+Shift+a exec ~/bin/org-agenda
# org-capture
bindsym $mod+Ctrl+c exec ~/bin/org-capture
# org-roam-capture
bindsym --release $mod+Shift+r exec ~/bin/org-roam-capture
# elfeed
bindsym $mod+Shift+e exec ~/bin/elfeed
# mu4e
bindsym $mod+Shift+m exec ~/bin/mu4e
for_window [title="emacs-floating-app"] floating enable
for_window [title="emacs-floating-app"] resize set 95 ppt 90 ppt
for_window [title="emacs-floating-app"] move position center


# jbang
#bindsym $mod+Ctrl+j; exec alacritty --hold --title jbang -e /home/iocanel/scripts/util/jbclip 
#for_window [title="jbang"] floating enable;


# kill focused window
bindsym $mod+Shift+q kill
# same rh only
bindsym $mod+Shift+y kill 

# start dmenu (a program launcher)
bindsym $mod+d exec wofi --show drun --show-icons --display-drun "Launch"
bindsym $mod+semicolon exec wofi -show drun -show-icons -display-drun "Launch"
bindsym $mod+g exec /home/iocanel/bin/qutebrowser-google-wofi &
bindsym $mod+w exec swayr switch-window


# start apps


# start clipmenu (a clipboard manager)
# in some cases clipmenu doesn't pickup the correct CM_LAUNCHER so force it here
bindsym --release $mod+c exec wofi-cliphist
bindsym --release $mod+Shift+c exec clipboard-to-kitty --class EditorTerm
bindsym --release $mod+p exec CM_LAUNCHER="wofi" wofi-pass

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop


# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
#bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+Shift+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
# bindsym $mod+w layout tabbed # Disable as we use the combo for switching to window
bindsym $mod+e layout toggle split

# toggle tiling / floating
#bindsym $mod+Shift+space floating toggle
bindsym $mod+Shift+space floating toggle; resize set 90 ppt 90 ppt; move position center;

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child


#bindsym $mod+Shift+a exec ~/scripts/k8s/kube-apply-from-clipboard
#bindsym $mod+Shift+n exec ~/scripts/k8s/kube-select-namespace
#bindsym $mod+Shift+x exec ~/scripts/util/execute-on-shell

#bindsym $mod+Shift+d exec ~/scripts/iot/toogle-desk-light
#bindsym $mod+Shift+o exec ~/scripts/iot/toogle-office-light

# Workspace Titles
set $ws1 "1:  "
set $ws2 "2:  "
set $ws3 "3:  "
set $ws4 "4:  "  
set $ws5 "5:  "  
set $ws6 "6:  "
set $ws7 "7:  "
set $ws8 "8"  
set $ws9 "9"  
set $ws10 "10"  


exec --no-startup-id kitty --class=MainTerminal
exec --no-startup-id gmail-personal
exec --no-startup-id gmail-work
exec --no-startup-id slack --class=Slack
exec --no-startup-id zulip --class=Zulip
exec --no-startup-id chatgpt-web
exec --no-startup-id emacs --title "Workspace Emacs"

# Force window placement using for_window (more reliable than assign)
for_window [class="MainTerminal"] move to workspace $ws1
for_window [class="GmailPersonal"] move to workspace $ws2
for_window [class="GmailWork"] move to workspace $ws3
for_window [app_id="^chrome-.*-Personal$"] move to workspace $ws2
for_window [app_id="^chrome-.*-Work$"] move to workspace $ws3
for_window [app_id="Slack"] move to workspace $ws4
for_window [app_id="Zulip"] move to workspace $ws5
for_window [title="ChatGPT"] move to workspace $ws6
for_window [title="Workspace Emacs"] move to workspace $ws7 
# don't assing emacs anywhere
#assign [class="Emacs"] $ws7


# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# move workspace to window
bindsym $mod+Ctrl+Right move workspace to output right
bindsym $mod+Ctrl+Left move workspace to output left

# reload the configuration file
bindsym $mod+Ctrl+l reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Ctrl+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Ctrl+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Screenshots
bindsym --release $mod+Shift+p exec "scrot -s '/home/iocanel/Documents/photos/screenshots/%Y-%m-%d_%H:%M:%S_$wx$h.png'"
bindsym --release Shift+Print exec "scrot -s '/home/iocanel/Documents/photos/screenshots/%Y-%m-%d_%H:%M:%S_$wx$h.png'"
bindsym --release Print exec "scrot -m '/home/iocanel/Documents/photos/screenshots/%Y-%m-%d_%H:%M:%S_$wx$h.png'"
bindsym --release Ctrl+Shift+p exec "scrot -u '/home/iocanel/Documents/photos/screenshots/%Y-%m-%d_%H:%M:%S_$wx$h.png'"
bindsym --release $mod+Shift+s exec "/home/iocanel/bin/toggle-screenkey"

# Screen Saver
bindsym $mod+Ctrl+Shift+s exec toggle-screenlock

# Monitor(DPMS) toggle
bindsym $mod+Ctrl+s exec toggle-monitor

#Emacs Daemon
bindsym $mod+Ctrl+Shift+e exec restart-emacsd

#Temporary workaround for auto resolving idea file cache conflicts
bindsym $mod+Shift+w exec file-cache-conflict-resolve

# Bluetooth Manager
bindsym --release $mod+Shift+b exec sway-toggle-blueman-applet

#Network Manager
bindsym --release $mod+Shift+n exec toggle-nm-applet

#Yapt
#bindsym $mod+y exec yapt -t

#bindsym $mod+Shift+y exec yapt -r

# resize window (you can also use the mouse for that)
mode "resize" {
# These bindings trigger as soon as you enter the resize mode

# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.
bindsym j resize shrink width 10 px or 10 ppt
bindsym k resize grow height 10 px or 10 ppt
bindsym l resize shrink height 10 px or 10 ppt
bindsym semicolon resize grow width 10 px or 10 ppt

# same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

# back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"



# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
include ~/.config/sway/catppuccin-mocha-theme.conf

# Start portal services
exec systemctl --user start xdg-desktop-portal-wlr
exec systemctl --user start xdg-desktop-portal

# Start waybar instead of swaybar
exec_always {
  systemctl --user import-environment WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP
  systemctl --user restart waybar.service
}

# Remove waybar window decorations and shadows
#for_window [app_id="waybar"] border none
#for_window [app_id="waybar"] shadows disable

# Custom configuration
smart_borders on
default_border pixel 3
#default_border normal
#default_floating_border normal
#hide_edge_borders both

#Autostart programs
# Compton is currently uninstalled, due to high CPU usage.
#exec_always compton


#
# Services 
#
exec --no-startup-id "setxkbmap -model pc105 -layout us,gr -option grp:alt_shift_toggle -option ctrl:nocaps"

exec --no-startup-id dunst -config ~/.config/dunst/dunstrc
exec --no-startup-id xautolock -time 30 -locker 'screenlock-now'
#exec --no-startup-id /usr/bin/picom -b
#exec --no-startup-id /usr/bin/conky -c ~/.config/conky/config
#exec --no-startup-id /usr/bin/conky -c ~/.config/conky/agenda
exec --no-startup-id nm-applet &
exec --no-startup-id dockd --daemon
exec --no-startup-id pasystray &
#exec --no-startup-id ~/scripts/util/toggle-camera off
#exec --no-startup-id ~/scripts/util/toggle-keyboard off


#
# Clipboard management (working, don't touch)
# 

# Start clipmenud (before starting autocutsel)
#exec --no-startup-id /usr/bin/clipmenud &
# Use autocutsel to sync primary (selection) and clipboard (explict copy/paste) buffer.
#exec --no-startup-id autocutsel -fork
#exec --no-startup-id autocutsel -selection PRIMARY -fork


#
# Clipboard management (Wayland)
#

# 1) Start the history daemon (collects text *and* images)
exec_always cliphist daemon

# 2) Feed new selections into the history
#    Text (regular clipboard)
exec_always sh -c 'wl-paste --type text --watch cliphist store'
#    Images (regular clipboard)
exec_always sh -c 'wl-paste --type image --watch cliphist store'

# 3) (Optional) also record PRIMARY selections (middle-click buffer)
#    Only enable if you actually use PRIMARY on Wayland.
#    Text
exec_always sh -c 'wl-paste --primary --type text --watch cliphist store'
#    Images
exec_always sh -c 'wl-paste --primary --type image --watch cliphist store'

# Keep PRIMARY (selection) in sync with clipboard
exec_always sh -c 'wl-paste --type text --watch wl-copy --type text --primary'

# Bind to workspace
bindsym $mod+1 workspace $ws1; 
bindsym $mod+2 workspace $ws2;
bindsym $mod+3 workspace $ws3;
bindsym $mod+4 workspace $ws4;
bindsym $mod+5 workspace $ws5;
bindsym $mod+6 workspace $ws6;
bindsym $mod+7 workspace $ws7;
bindsym $mod+8 workspace $ws8;
bindsym $mod+9 workspace $ws9;
bindsym $mod+0 workspace $ws10;

# Sway FX
shadows enable
shadow_blur_radius 20
shadow_color #000000CC   # less transparent
shadow_offset 8 8
exec_always --no-startup-id ~/bin/swayfx-auto-shadows

# Rounded corners (requires swayfx build)
corner_radius 10

# Thicker border for the focused window
default_border pixel 4
