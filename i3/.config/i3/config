# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
font pango: M+ 1m, FontAwesome, Ionicons, 12

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Gaps
smart_gaps on
gaps inner 20
gaps outer 20

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec alacritty --title terminal
bindsym $mod+Enter exec alacritty --title terminal

#
# Floating Apps
#

for_window [class="Nitrogen"] floating enable; resize shrink height 1000px; move position center;

# AlsaMixer
bindsym $mod+Ctrl+a; exec alacritty --title alsamixer -e alsamixer
for_window [title="alsamixer"] floating enable;

# Bluetooth manager
bindsym $mod+Ctrl+b; exec blueman-manager
for_window [class="Blueman-manager"] floating enable; move position center;

# ytop
bindsym $mod+Ctrl+t; exec alacritty --title ytop -e ytop
for_window [title="ytop"] floating enable;

# elfeed
bindsym $mod+Shift+e; exec ~/bin/elfeed
for_window [title="elfeed-app"] floating enable;

# dunst
bindsym Ctrl+grave; exec dunstctl history-pop
bindsym Mod+space; exec dunstctl close
bindsym Mod+shift+space; exec dunstctl close-all
#bindsym $mod+shift+d; exec dunstctl set-paused toggle

# dunst


#
# Emacs frames
#

# Move shell like windows to the bottom of the screen to create an
# IDE-like layout (windows on top - tiny shell to the bottom)

#for_window [title="^\*vterm.*"] move down; resize set 100 ppt 25 ppt;
#for_window [title="^\*shell.*"] move down; resize set 100 ppt 25 ppt;
#for_window [title=".*helm-ag.*"] move down; resize set 100 ppt 25 ppt;
#for_window [title=".*undo-tree.*"] move right; resize set 50 ppt 100 ppt;

# mu4e
bindsym $mod+Shift+m; exec ~/bin/mu4e
for_window [title="mu4e-app"] floating enable

# org-agenda
bindsym $mod+Shift+a; exec ~/bin/org-agenda
for_window [title="org-agenda-app"] floating enable;

# org-capture
bindsym $mod+Shift+c; exec ~/bin/org-capture
for_window [title="org-capture-app"] floating enable;

# org-roam-capture
bindsym --release $mod+Shift+r; exec ~/bin/org-roam-capture
for_window [title="org-roam-app"] floating enable;

# jbang
#bindsym $mod+Ctrl+j; exec alacritty --hold --title jbang -e /home/iocanel/scripts/util/jbclip 
#for_window [title="jbang"] floating enable;


# kill focused window
bindsym $mod+Shift+q kill
# same rh only
bindsym $mod+Shift+y kill 

# start dmenu (a program launcher)
bindsym $mod+d exec rofi -show drun -show-icons -display-drun "Launch"
bindsym $mod+semicolon exec rofi -show drun -show-icons -display-drun "Launch"
bindsym $mod+f exec dmenufm
bindsym $mod+g exec /home/iocanel/bin/qutebrowser-google-rofi &
bindsym $mod+t exec "rofi -combi-modi window,drun -show combi -show-icons -display-combi 'Select'"

# start apps


# start clipmenu (a clipboard manager)
bindsym --release $mod+c exec clipmenu

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop


# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
#bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+Shift+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child


#bindsym $mod+Shift+a exec ~/scripts/k8s/kube-apply-from-clipboard
#bindsym $mod+Shift+n exec ~/scripts/k8s/kube-select-namespace
#bindsym $mod+Shift+x exec ~/scripts/util/execute-on-shell

#bindsym $mod+Shift+d exec ~/scripts/iot/toogle-desk-light
#bindsym $mod+Shift+o exec ~/scripts/iot/toogle-office-light

#menu title
set $menu1 
set $menu2 
set $menu3 
set $menu4 
set $menu5 
set $menu6 



# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# move workspace to window
bindsym $mod+Ctrl+Right move workspace to output right
bindsym $mod+Ctrl+Left move workspace to output left

# reload the configuration file
bindsym $mod+Ctrl+l reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Ctrl+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Ctrl+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Screenshots
bindsym --release $mod+Shift+p exec "scrot -s '/home/iocanel/Photos/screenshots/%Y-%m-%d_%H:%M:%S_$wx$h.png'"
bindsym --release Shift+Print exec "scrot -s '/home/iocanel/Photos/screenshots/%Y-%m-%d_%H:%M:%S_$wx$h.png'"
bindsym --release Print exec "scrot -m '/home/iocanel/Photos/screenshots/%Y-%m-%d_%H:%M:%S_$wx$h.png'"
bindsym --release $mod+Shift+Print exec "scrot -u -d 4 '/home/iocanel/Photos/screenshots/%Y-%m-%d_%H:%M:%S_$wx$h.png'"
bindsym --release Ctrl+Shift+p exec "imgur-screenshot -w"
bindsym --release $mod+Shift+s exec "/home/iocanel/bin/toggle-screenkey"

# Screen Saver
bindsym $mod+Ctrl+Shift+s exec toggle-screenlock

# Monitor(DPMS) toggle
bindsym $mod+Ctrl+s exec toggle-monitor

#Emacs Daemon
bindsym $mod+Ctrl+Shift+e exec restart-emacsd

#Temporary workaround for auto resolving idea file cache conflicts
bindsym $mod+Shift+w exec file-cache-conflict-resolve

# Bluetooth Manager
bindsym --release $mod+Shift+b exec toggle-blueman-applet

#Network Manager
bindsym --release $mod+Shift+n exec toggle-nm-applet

#Yapt
#bindsym $mod+y exec yapt -t

#bindsym $mod+Shift+y exec yapt -r

# resize window (you can also use the mouse for that)
mode "resize" {
# These bindings trigger as soon as you enter the resize mode

# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.
bindsym j resize shrink width 10 px or 10 ppt
bindsym k resize grow height 10 px or 10 ppt
bindsym l resize shrink height 10 px or 10 ppt
bindsym semicolon resize grow width 10 px or 10 ppt

# same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

# back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"



# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
include ~/.config/i3/darkula-light-theme.conf

# Custom configuration
new_window pixel 1
hide_edge_borders both

# Assing applications to workspaces
#assign [class="^Urxvt$" instance="^mutt$"] 1
#assign [class="Emacs"] 2
#assign [class="Chrome"] 3


#Autostart programs

# Compton is currently uninstalled, due to high CPU usage.
# exec_always compton


# Services 
exec --no-startup-id nitrogen --random --set-auto --head=0
exec --no-startup-id nitrogen --random --set-auto --head=1
exec --no-startup-id "setxkbmap -model pc105 -layout us,gr -option grp:alt_shift_toggle -option ctrl:nocaps"
exec --no-startup-id "autocutsel"

exec --no-startup-id dunst -config ~/.config/dunst/dunstrc
exec --no-startup-id xautolock -time 30 -locker 'lock-screen'
#exec --no-startup-id /usr/bin/picom -b
#exec --no-startup-id /usr/bin/conky -c ~/.config/conky/config
#exec --no-startup-id /usr/bin/conky -c ~/.config/conky/agenda
exec --no-startup-id /usr/bin/clipmenud &
exec --no-startup-id nm-applet &
exec --no-startup-id zulip &
exec --no-startup-id slack &
exec --no-startup-id /usr/bin/emacs --daemon
exec --no-startup-id dockd --daemon
exec --no-startup-id pasystray &

#exec --no-startup-id ~/scripts/util/toggle-camera off
#exec --no-startup-id ~/scripts/util/toggle-keyboard off

# Bind to workspace
bindsym $mod+1 workspace 1; 
bindsym $mod+2 workspace 2;
bindsym $mod+3 workspace 3;
bindsym $mod+4 workspace 4;
bindsym $mod+5 workspace 5;
bindsym $mod+6 workspace 6;
bindsym $mod+7 workspace 7;
bindsym $mod+8 workspace 8;
bindsym $mod+9 workspace 9;
bindsym $mod+0 workspace 10;

# Monitors
workspace 1 output DP-3.2
workspace 2 output DP-3.2
workspace 3 output DP-3.2
workspace 4 output DP-3.2
workspace 5 output DP-4
workspace 6 output DP-4
workspace 7 output DP-4
